<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://hacho08.github.io/</id><title>Hyunae Cho</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2021-12-16T23:56:00+09:00</updated> <author> <name>Hyunae Cho</name> <uri>https://hacho08.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://hacho08.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://hacho08.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2021 Hyunae Cho </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Git이 뭔가요??</title><link href="https://hacho08.github.io/posts/git/" rel="alternate" type="text/html" title="Git이 뭔가요??" /><published>2021-12-15T04:25:00+09:00</published> <updated>2021-12-16T23:55:35+09:00</updated> <id>https://hacho08.github.io/posts/git/</id> <content src="https://hacho08.github.io/posts/git/" /> <author> <name>조현아</name> </author> <category term="Blogging" /> <summary> Git이 뭔지 알아보겠습니다. 분산 버전관리 시스템?! Git은 local 즉 내 컴퓨터안에서 작업하고 있는 부분과 remote, 깃에 올려 둔 부분으로 구분 지을 수 있습니다. 로컬에서도 로컬 리포지토리라는 곳이 있는데요 이곳에 작업하고 있던 부분을 커밋시켜 줄 수 있습니다. 커밋 시켜준 것들을 푸시를 통해 리모트 리포지토리에 올려줄 수 있습니다. 이렇게 로컬에서의 커밋과 업데이트, 그리고 리모트와 로컬사이에서의 푸시와 풀을 이용하여 작업물을 관리할 수 있습니다. 명령어 git init 을 통해 현재 작업하고 있는 디렉토리를 git 저장소로 지정해줍니다. 작업한 파일을 스테이징 할때는 git add 라는 명령어를 사용하는데요 git add --all 이라고 하면 이전 커밋부터 지금까지 작업했... </summary> </entry> <entry><title>Google Analytics 적용하기</title><link href="https://hacho08.github.io/posts/Google-Analytics/" rel="alternate" type="text/html" title="Google Analytics 적용하기" /><published>2021-12-15T01:14:00+09:00</published> <updated>2021-12-16T23:55:35+09:00</updated> <id>https://hacho08.github.io/posts/Google-Analytics/</id> <content src="https://hacho08.github.io/posts/Google-Analytics/" /> <author> <name>조현아</name> </author> <category term="Blogging" /> <summary> 이번 블로그는 Google Analytics를 적용해본 과정에 대해 적어보겠습니다! 시작하기 Google Analytics 에 들어가서 계정을 만들어 줍니다. 측정 ID받아오기 가입 후에 웹사이트 왼쪽 하단에 세팅을 들어갑니다. 세팅 &amp;gt; 관리자 &amp;gt; 속성 &amp;gt; 데이터 스트림 에 들어가서 스트림 추가를 클릭하여 웹사이트의 URL을 넣어줍니다! 넣어주고 나면 측정 ID와 html 코드가 생성됩니다. 블로그에 적용하기 _config.yml 파일에서 google_analytics: id: 'G-V6XXXXXXX' # fill in your Google Analytics ID # Google Analytics pageviews report settings pv: ... </summary> </entry> <entry><title>Jekyll 블로그 시작하기!</title><link href="https://hacho08.github.io/posts/Jekyll-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0!/" rel="alternate" type="text/html" title="Jekyll 블로그 시작하기!" /><published>2021-11-29T20:55:00+09:00</published> <updated>2021-12-15T17:08:57+09:00</updated> <id>https://hacho08.github.io/posts/Jekyll-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0!/</id> <content src="https://hacho08.github.io/posts/Jekyll-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0!/" /> <author> <name>조현아</name> </author> <category term="Blogging" /> <summary> 준비하기 Jekyll Docs 를 참고하여 Ruby, RubyGems, Jekyll, 그리고 Bundler를 설치 해 주었습니다. 시작하기 jekyll new . --force라는 명령어를 입력하여 제가 작업하고 있던 디렉토리에 Jekyll을 설치했습니다. bundle exec jekyll serve 로 Jekyll serve 실행 후 웹에서 localhost:4000에 접속해서 제가 만든 기본 테마로 된 Jekyll 사이트가 만들어진 것을 확인했습니다. 테마 변경하기 마음에 드는 테마를 고르고 골라 jekyll-theme-chirpy 라는 테마로 하기로 결정하고 로컬로 git clone 을 했습니다. 의존성을 감안하여 _posts를 제외하고 테마를 덮어씌우라고 배웠지만 저는 _posts에 ... </summary> </entry> </feed>
